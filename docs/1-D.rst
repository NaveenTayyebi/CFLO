1-D Module
++++++++++

The 1-D modules provide the tools to visualize and compute fluid property ratios for several common flows.

Classes
==========

shockless
----------
.. code:: matlab

  sonic_ref_plot(spec_heat_ratio,mach_range,varargin)
  
Returns sonic fluid property ratio plots for isentropic, adiabatic, and frictionless-reversible-heat transfer flows `[source] <https://cflo.readthedocs.io/en/latest/source_shockless.html>`_
  
  **Parameters:** 
    * **spec_heat_ratio** (*double*) - The specifc heat ratio of the fluid 
    * **mach_range** (*double array, size = [1 2]*) - The range of mach numbers to plot over 
    * **varargin** (*char* or *string*) - The property abbreviations. These include *'p'*, *'d'*, *'T'*, *'tp'*, and *'tT'* for pressure, density, temperature, total pressure, and total temperature respectively. 
    
  **Examples:**
  
  The call ``shockless.sonic_ref_plot(1.4,[1 5],'p','d')`` returns 
  
.. image:: pressure_1.png
  :width: 500 px
  :align: center
.. image:: density_1.png
  :width: 500 px
  :align: center
  
.. code:: matlab

  sonic_ref_calc(spec_heat_ratio,mach,property,flow_type)
  
Returns sonic fluid property ratio for an isentropic, adiabatic, or frictionless-reversible-heat transfer flow at a specified mach number `[source] <https://cflo.readthedocs.io/en/latest/source_shockless.html>`_

  **Parameters:** 
    * **spec_heat_ratio** (*double*) - The specifc heat ratio of the fluid 
    * **mach_number** (*double*) - The mach number. 
    * **property** (*char* or *string*) - The property abbreviation. These include *'p'*, *'d'*, *'T'*, *'tp'*, and *'tT'* for pressure, density, temperature, total pressure, and total temperature respectively. 
    * **flow_type** (*char* or *string*) - The flow-type abbreviation. These include *'is'*, *'ad'*, and *'rvht'* for isentropic, adiabatic, and frictionless-reversible heat transfer respectively. 
    
     **Examples:**

.. code:: matlab

  >> shockless.sonic_ref_calc(1.4,2.2,'p','rvht')

  ans =

      0.3086

  >> shockless.sonic_ref_calc(1.4,2.2,'tT','rvht')

  ans =

      0.7561

  >> shockless.sonic_ref_calc(1.4,0.4,'tp','rvht')

  ans =

      1.1566

normal_shock
----------
.. code:: matlab

  upstream_ref_plot(spec_heat_ratio,mach_range,property)
  
  
  
.. code:: matlab

  upstream_ref_calc(spec_heat_ratio,mach,property,flow_type)

Applets
==========



